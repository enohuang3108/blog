---
import siteConfig from "@/site-config";
import "@/styles/dot.css";
import "@/styles/global.css";
import "@/styles/prose.css";

interface Props {
  title?: string;
  description?: string;
  image?: { src: string; alt?: string };
  pageType?: "website" | "article";
}

const {
  description = "",
  image = siteConfig.image,
  pageType = "website",
} = Astro.props;

const title = [Astro.props.title, siteConfig.title].filter(Boolean).join(" | ");

const resolvedImage = image?.src
  ? {
      src: new URL(image.src, Astro.site).toString(),
      alt: image.alt,
    }
  : undefined;

const canonicalURL = new URL(Astro.request.url, Astro.site);

function normalizeCanonicalURL(url: URL): string {
  // remove query string or utm parameters
  const { origin, pathname } = url;
  return `${origin}${pathname}${pathname.endsWith('/') ? '' : '/'}`;
}
---

<!-- High Priority Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>{title}</title>
<script async is:inline>
  try {
    const storedTheme =
      typeof localStorage !== "undefined" && localStorage.getItem("theme");
    const theme =
      storedTheme ||
      (window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light");

    document.documentElement.classList.add(theme);
  } catch (error) {
    console.error(error);
  }
</script>

<!-- Umami -->
<script defer src="https://umami.enohuang.com/script.js" data-website-id="f3814523-dcfa-478f-b142-10e18e4ef38c"></script>


<meta name="generator" content={Astro.generator} />

<!-- Low Priority Global Metadata -->
<link rel="icon" type="image/svg+xml" href="/favicon.webp" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/atom+xml"
  href="/atom.xml"
  title="RSS"
/>

<!-- Page Metadata -->
<link rel="canonical" href={normalizeCanonicalURL(canonicalURL)} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={pageType} />
<meta property="og:url" content={normalizeCanonicalURL(canonicalURL)} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{resolvedImage?.src && <meta property="og:image" content={resolvedImage.src} />}
{
  resolvedImage?.alt && (
    <meta property="og:image:alt" content={resolvedImage.alt} />
  )
}

<!-- X / Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={normalizeCanonicalURL(canonicalURL)} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{
  resolvedImage?.src && (
    <meta property="twitter:image" content={resolvedImage.src} />
  )
}
{
  resolvedImage?.alt && (
    <meta name="twitter:image:alt" content={resolvedImage?.alt} />
  )
}
